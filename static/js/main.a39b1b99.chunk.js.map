{"version":3,"sources":["Navbar.js","ParcelShipping.js","ParcelReceipt.js","TracknTraceShow.js","TracknTraceFind.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","state","navbarActive","this","setState","className","role","aria-label","to","aria-expanded","data-target","onClick","toggleActive","aria-hidden","id","Component","ParcelShipping","from","weight","height","width","depth","loading","hasResult","handleChange","bind","handleSubmit","target","name","value","event","console","log","JSON","parse","stringify","setTimeout","preventDefault","cheap","fast","pathname","time","price","onSubmit","required","onChange","step","min","max","type","placeholder","style","maxWidth","defaultValue","renderResults","trackingId","ParcelReceipt","location","href","window","origin","TracknTraceShow","match","params","paddingTop","TracknTraceFind","hasNoResult","Math","random","renderNoResult","renderResult","App","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a39b1b99.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { navbarActive: false };\r\n  }\r\n\r\n  toggleActive() {\r\n    this.setState({ navbarActive: !this.state.navbarActive });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <Link className=\"navbar-item\" to=\"/\">\r\n            <b>Parcel Delivery IT Solution</b>\r\n          </Link>\r\n\r\n          <a\r\n            role=\"button\"\r\n            className={`navbar-burger burger ${\r\n              this.state.navbarActive ? \"is-active\" : \"\"\r\n            }`}\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            data-target=\"navbar\"\r\n            onClick={() => this.toggleActive()}\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </a>\r\n        </div>\r\n\r\n        <div\r\n          id=\"navbar\"\r\n          className={`navbar-menu ${\r\n            this.state.navbarActive ? \"is-active\" : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"navbar-start\">\r\n            <Link to=\"/parcel-shipping\" className=\"navbar-item is-tab\">\r\n              Parcel Shipping\r\n            </Link>\r\n            <Link to=\"/track-n-trace\" className=\"navbar-item is-tab\">\r\n              Track &amp; Trace\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                <a className=\"navbar-link\">Language</a>\r\n\r\n                <div className=\"navbar-dropdown\">\r\n                  <a className=\"navbar-item is-active\">English</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"navbar-item\">\r\n              <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                <a className=\"navbar-link\">Currency</a>\r\n\r\n                <div className=\"navbar-dropdown\">\r\n                  <a className=\"navbar-item is-active\">US Dollar</a>\r\n                  <a className=\"navbar-item\">British Pund</a>\r\n                  <a className=\"navbar-item\">Euro</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ParcelShipping extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      from: \"\",\r\n      to: \"\",\r\n      weight: \"\",\r\n      height: \"\",\r\n      width: \"\",\r\n      depth: \"\",\r\n      loading: false,\r\n      hasResult: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(\"ParcelShipping\", JSON.parse(JSON.stringify(this.state)));\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, hasResult: true });\r\n    }, 500);\r\n    event.preventDefault();\r\n  }\r\n\r\n  renderResults({ cheap, fast }) {\r\n    return (\r\n      <div className=\"field is-horizontal animated bounceInRight\">\r\n        <div className=\"field-label\"></div>\r\n        <div className=\"field-body\">\r\n          <div className=\"container columns is-fullwidth\">\r\n            <div className=\"column is-half\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/parcel-receipt\",\r\n                  state: { ...this.state, ...fast }\r\n                }}\r\n              >\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">Fastest</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                      Delivery time: {fast.time}\r\n                      <br />\r\n                      Price: {fast.price}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"column is-half\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/parcel-receipt\",\r\n                  state: { ...this.state, ...cheap }\r\n                }}\r\n              >\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">Cheapest</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                      Delivery time: {cheap.time}\r\n                      <br />\r\n                      Price: {cheap.price}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-body\">\r\n        <form className=\"container\" onSubmit={this.handleSubmit}>\r\n          <h1 className=\"title is-1\">Parcel Shipping</h1>\r\n\r\n          <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n              <label className=\"label\">From</label>\r\n            </div>\r\n            <div className=\"field-body\">\r\n              <div className=\"field\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select\r\n                    name=\"from\"\r\n                    required\r\n                    value={this.state.from}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\">Select city</option>\r\n                    <option>Abidjan</option>\r\n                    <option>Accra</option>\r\n                    <option>Alexandria</option>\r\n                    <option>Algiers</option>\r\n                    <option>Cairo</option>\r\n                    <option>Cape</option>\r\n                    <option>Casablanca</option>\r\n                    <option>Dar</option>\r\n                    <option>Douala</option>\r\n                    <option>Giza</option>\r\n                    <option>Johannesburg</option>\r\n                    <option>Kano</option>\r\n                    <option>Kinshasa</option>\r\n                    <option>Kumasi</option>\r\n                    <option>Lagos</option>\r\n                    <option>Luanda</option>\r\n                    <option>Nairobi</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"field-label is-normal\">\r\n                <label className=\"label\">To</label>\r\n              </div>\r\n              <div className=\"field-body\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select\r\n                    name=\"to\"\r\n                    required\r\n                    value={this.state.to}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\">Select city</option>\r\n                    <option>Abidjan</option>\r\n                    <option>Accra</option>\r\n                    <option>Alexandria</option>\r\n                    <option>Algiers</option>\r\n                    <option>Cairo</option>\r\n                    <option>Cape</option>\r\n                    <option>Casablanca</option>\r\n                    <option>Dar</option>\r\n                    <option>Douala</option>\r\n                    <option>Giza</option>\r\n                    <option>Johannesburg</option>\r\n                    <option>Kano</option>\r\n                    <option>Kinshasa</option>\r\n                    <option>Kumasi</option>\r\n                    <option>Lagos</option>\r\n                    <option>Luanda</option>\r\n                    <option>Nairobi</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n              <label className=\"label\">Weight</label>\r\n            </div>\r\n            <div className=\"field-body\">\r\n              <div className=\"field is-grouped\">\r\n                <p className=\"control is-expanded\">\r\n                  <input\r\n                    id=\"slider\"\r\n                    name=\"weight\"\r\n                    className=\"slider is-fullwidth\"\r\n                    step=\"1\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    type=\"range\"\r\n                    value={this.state.weight}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </p>\r\n                <p className=\"control\">\r\n                  <input\r\n                    name=\"weight\"\r\n                    required\r\n                    type=\"text\"\r\n                    className=\"button is-dark\"\r\n                    placeholder=\"N/A\"\r\n                    style={{ maxWidth: \"5rem\" }}\r\n                    value={this.state.weight}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </p>\r\n                <p className=\"control\">\r\n                  <span className=\"button is-white\">kg</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n              <label className=\"label\">Size</label>\r\n            </div>\r\n\r\n            <div className=\"field-body\">\r\n              <div className=\"field has-addons has-addons-centered\">\r\n                <p className=\"control\">\r\n                  <input\r\n                    name=\"height\"\r\n                    required\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Height\"\r\n                    value={this.state.height}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </p>\r\n                <p className=\"control\">\r\n                  <span className=\"select\">\r\n                    <select defaultValue=\"cm\">\r\n                      <option>mm</option>\r\n                      <option>cm</option>\r\n                      <option>m</option>\r\n                    </select>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"field has-addons has-addons-centered\">\r\n                <p className=\"control\">\r\n                  <input\r\n                    name=\"width\"\r\n                    required\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Width\"\r\n                    value={this.state.width}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </p>\r\n                <p className=\"control\">\r\n                  <span className=\"select\">\r\n                    <select defaultValue=\"cm\">\r\n                      <option>mm</option>\r\n                      <option>cm</option>\r\n                      <option>m</option>\r\n                    </select>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"field has-addons has-addons-centered\">\r\n                <p className=\"control\">\r\n                  <input\r\n                    name=\"depth\"\r\n                    required\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Depth\"\r\n                    value={this.state.depth}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </p>\r\n                <p className=\"control\">\r\n                  <span className=\"select\">\r\n                    <select defaultValue=\"cm\">\r\n                      <option>mm</option>\r\n                      <option>cm</option>\r\n                      <option>m</option>\r\n                    </select>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"field is-grouped is-grouped-right\">\r\n            <p className=\"control\">\r\n              <button\r\n                className={`button is-primary ${\r\n                  this.state.loading ? \"is-loading\" : \"\"\r\n                }`}\r\n                type=\"submit\"\r\n              >\r\n                Find\r\n              </button>\r\n            </p>\r\n          </div>\r\n\r\n          {this.state.hasResult &&\r\n            this.renderResults({\r\n              cheap: {\r\n                time: \"~ 7 days\",\r\n                price: \"100 $\",\r\n                trackingId: \"4413-CHEAP-5613\"\r\n              },\r\n              fast: {\r\n                time: \"~ 2 days\",\r\n                price: \"280 $\",\r\n                trackingId: \"9572-FAST-1742\"\r\n              }\r\n            })}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ParcelShipping;\r\n","import React, { Component } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nclass ParcelReceipt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = props.location.state || {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title is-size-1-tablet is-size-3-mobile has-text-centered-mobile\">\r\n            Parcel Receipt\r\n          </h1>\r\n\r\n          <h4 className=\"is-size-4\">Parcel</h4>\r\n          <div className=\"columns has-text-centered is-multiline is-mobile\">\r\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\r\n              Tracking Id <br />\r\n              <span className=\"is-size-3\">{this.state.trackingId}</span>\r\n            </div>\r\n            <div className=\"column is-half-desktop is-half-tablet is-full-mobile\">\r\n              Size <br />\r\n              <span className=\"is-size-3\">\r\n                {`${this.state.height} cm x ${this.state.width} cm x ${this.state.depth} cm`}\r\n              </span>\r\n            </div>\r\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\r\n              Weight <br />\r\n              <span className=\"is-size-3\">{this.state.weight} kg</span>\r\n            </div>\r\n          </div>\r\n\r\n          <h4 className=\"is-size-4\">Delivery</h4>\r\n          <div className=\"columns has-text-centered is-multiline is-mobile\">\r\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\r\n              From <br />\r\n              <span className=\"is-size-3\">{this.state.from}</span>\r\n            </div>\r\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\r\n              To <br />\r\n              <span className=\"is-size-3\">{this.state.to}</span>\r\n            </div>\r\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\r\n              Time <br />\r\n              <span className=\"is-size-3\">{this.state.time}</span>\r\n            </div>\r\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\r\n              Price <br />\r\n              <span className=\"is-size-3\">{this.state.price}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"has-text-centered\">\r\n            <a\r\n              href={`${window.location.origin}/track-n-trace/${this.state.trackingId}`}\r\n            >\r\n              <QRCode\r\n                value={`${window.location.origin}/track-n-trace/${this.state.trackingId}`}\r\n              />\r\n            </a>\r\n            <br />\r\n            <em>Date 2020-02-05</em>\r\n          </div>\r\n\r\n          <h4 className=\"is-size-4\">Route</h4>\r\n          <table className=\"table is-size-4\">\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"has-text-weight-light\">Truck </td>\r\n                <td>{this.state.from}</td>\r\n                <td className=\"has-text-weight-light\">-></td>\r\n                <td>Kisumu</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"has-text-weight-light\">Flight </td>\r\n                <td>Kisumu</td>\r\n                <td className=\"has-text-weight-light\">-></td>\r\n                <td>Dakar</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"has-text-weight-light\">Boat </td>\r\n                <td>Dakar</td>\r\n                <td className=\"has-text-weight-light\">-></td>\r\n                <td>{this.state.to}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ParcelReceipt;\r\n","import React, { Component } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nclass TracknTraceShow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { id: props.match.params.id };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title is-size-1-tablet is-size-3-mobile has-text-centered-mobile\">\r\n            Track &amp; Trace\r\n          </h1>\r\n\r\n          <h4 className=\"is-size-4\">Parcel</h4>\r\n          <div className=\"columns is-multiline is-mobile\">\r\n            <div className=\"column is-half-tablet is-full-mobile\">\r\n              <div className=\"card has-text-centered\">\r\n                <div className=\"card-image\" style={{ paddingTop: \"2rem\" }}>\r\n                  <a\r\n                    href={`${window.location.origin}/track-n-trace/${this.state.id}`}\r\n                  >\r\n                    <QRCode\r\n                      value={`${window.location.origin}/track-n-trace/${this.state.id}`}\r\n                    />\r\n                  </a>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                  <p className=\"title is-4\">{this.state.id}</p>\r\n                  <p className=\"subtitle is-6\">Tracking Id</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <h4 className=\"is-size-4\">Delivery Route</h4>\r\n          <table className=\"table is-size-4\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Kisumu</td>\r\n                <td className=\"has-text-weight-light\">\r\n                  <em>2020-02-06</em>\r\n                </td>\r\n                <td className=\"has-text-weight-light\">Arrived</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Cairo</td>\r\n                <td className=\"has-text-weight-light\">\r\n                  <em>2020-01-23</em>\r\n                </td>\r\n                <td className=\"has-text-weight-light\">Sent</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Dakar</td>\r\n                <td className=\"has-text-weight-light\">\r\n                  <em>2020-01-01</em>\r\n                </td>\r\n                <td className=\"has-text-weight-light\">Sent</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TracknTraceShow;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nclass TracknTraceFind extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      loading: false,\r\n      hasResult: false,\r\n      hasNoResult: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange({ target }) {\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(\"TracknTraceFind\", JSON.parse(JSON.stringify(this.state)));\r\n    this.setState({ loading: true, hasResult: false, hasNoResult: false });\r\n    setTimeout(() => {\r\n      if (Math.random() < 0.2) {\r\n        this.setState({ loading: false, hasNoResult: true });\r\n      } else {\r\n        this.setState({ loading: false, hasResult: true });\r\n      }\r\n    }, 500);\r\n    event.preventDefault();\r\n  }\r\n\r\n  renderNoResult() {\r\n    return (\r\n      <div className=\"field is-horizontal animated bounceInRight\">\r\n        <div className=\"field-label\"></div>\r\n        <div className=\"field-body\">\r\n          <div className=\"container columns is-fullwidth\">\r\n            <div className=\"column\">\r\n              <h4 className=\"is-size-4\">\r\n                No parcel with given <strong>Tracking Id</strong> found\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <div className=\"field is-horizontal animated bounceInRight\">\r\n        <div className=\"field-label\"></div>\r\n        <div className=\"field-body\">\r\n          <div className=\"container columns is-fullwidth\">\r\n            <div className=\"column is-half\">\r\n              <h4 className=\"is-size-4\">Parcel found</h4>\r\n              <Link\r\n                to={{\r\n                  pathname: `/track-n-trace/${this.state.id}`\r\n                }}\r\n              >\r\n                <div className=\"card has-text-centered\">\r\n                  <div className=\"card-content\">\r\n                    <div className=\"card-image\" style={{ paddingTop: \"2rem\" }}>\r\n                      <QRCode value=\"https://victorwinberg.github.io\" />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                      <p className=\"title is-4\">{this.state.id}</p>\r\n                      <p className=\"subtitle is-6\">Tracking Id</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-body\">\r\n        <form className=\"container\" onSubmit={this.handleSubmit}>\r\n          <h1 className=\"title is-1\">Track &amp; Trace</h1>\r\n\r\n          <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n              <label className=\"label\">Tracking Id</label>\r\n            </div>\r\n\r\n            <div className=\"field-body\">\r\n              <div className=\"field\">\r\n                <p className=\"control\">\r\n                  <input\r\n                    name=\"id\"\r\n                    required\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"E.g. 9572-FAST-1742\"\r\n                    value={this.state.id}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"field is-grouped is-grouped-right\">\r\n            <p className=\"control\">\r\n              <button\r\n                className={`button is-primary ${\r\n                  this.state.loading ? \"is-loading\" : \"\"\r\n                }`}\r\n                type=\"submit\"\r\n              >\r\n                Find\r\n              </button>\r\n            </p>\r\n          </div>\r\n\r\n          {this.state.hasNoResult && this.renderNoResult()}\r\n          {this.state.hasResult && this.renderResult()}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TracknTraceFind;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Navbar from \"./Navbar\";\nimport ParcelShipping from \"./ParcelShipping\";\nimport ParcelReceipt from \"./ParcelReceipt\";\nimport TracknTraceShow from \"./TracknTraceShow\";\nimport TracknTraceFind from \"./TracknTraceFind\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/parcel-shipping\" component={ParcelShipping} />\n        <Route path=\"/parcel-receipt\" component={ParcelReceipt} />\n        <Route path=\"/track-n-trace/:id\" component={TracknTraceShow} />\n        <Route path=\"/track-n-trace\" component={TracknTraceFind} />\n        <Route path=\"*\">\n          <Redirect to=\"/parcel-shipping\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.scss\";\nimport \"animate.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}