{"version":3,"sources":["Navbar.js","Order.js","Trace.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","role","aria-label","to","className","href","aria-expanded","data-target","aria-hidden","id","Order","type","placeholder","value","name","Trace","Home","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5cee575.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default Navbar => {\r\n  return (\r\n    <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div class=\"navbar-brand\">\r\n        <Link class=\"navbar-item\" to=\"/\">\r\n          <h1 className=\"title is-4\">PostAfrica</h1>\r\n        </Link>\r\n\r\n        <a\r\n          href=\"#\"\r\n          role=\"button\"\r\n          class=\"navbar-burger burger\"\r\n          aria-label=\"menu\"\r\n          aria-expanded=\"false\"\r\n          data-target=\"navbarBasicExample\"\r\n        >\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n        </a>\r\n      </div>\r\n\r\n      <div id=\"navbarBasicExample\" class=\"navbar-menu\">\r\n        <div class=\"navbar-start\">\r\n          <Link to=\"/\" class=\"navbar-item\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/order\" class=\"navbar-item\">\r\n            Order\r\n          </Link>\r\n          <Link to=\"/trace\" class=\"navbar-item\">\r\n            Track & Trace\r\n          </Link>\r\n        </div>\r\n\r\n        <div class=\"navbar-end\">\r\n          <div class=\"navbar-item\">\r\n            <div class=\"buttons\">\r\n              <a class=\"button is-primary\">\r\n                <strong>Sign up</strong>\r\n              </a>\r\n              <a class=\"button is-light\">Log in</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default Order => {\r\n  return (\r\n    <div>\r\n      <div class=\"field\">\r\n        <label class=\"label\">Name</label>\r\n        <div class=\"control\">\r\n          <input class=\"input\" type=\"text\" placeholder=\"Text input\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label class=\"label\">Username</label>\r\n        <div class=\"control has-icons-left has-icons-right\">\r\n          <input\r\n            class=\"input is-success\"\r\n            type=\"text\"\r\n            placeholder=\"Text input\"\r\n            value=\"bulma\"\r\n          />\r\n          <span class=\"icon is-small is-left\">\r\n            <i class=\"fas fa-user\"></i>\r\n          </span>\r\n          <span class=\"icon is-small is-right\">\r\n            <i class=\"fas fa-check\"></i>\r\n          </span>\r\n        </div>\r\n        <p class=\"help is-success\">This username is available</p>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label class=\"label\">Email</label>\r\n        <div class=\"control has-icons-left has-icons-right\">\r\n          <input\r\n            class=\"input is-danger\"\r\n            type=\"email\"\r\n            placeholder=\"Email input\"\r\n            value=\"hello@\"\r\n          />\r\n          <span class=\"icon is-small is-left\">\r\n            <i class=\"fas fa-envelope\"></i>\r\n          </span>\r\n          <span class=\"icon is-small is-right\">\r\n            <i class=\"fas fa-exclamation-triangle\"></i>\r\n          </span>\r\n        </div>\r\n        <p class=\"help is-danger\">This email is invalid</p>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label class=\"label\">Subject</label>\r\n        <div class=\"control\">\r\n          <div class=\"select\">\r\n            <select>\r\n              <option>Select dropdown</option>\r\n              <option>With options</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <label class=\"label\">Message</label>\r\n        <div class=\"control\">\r\n          <textarea class=\"textarea\" placeholder=\"Textarea\"></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <div class=\"control\">\r\n          <label class=\"checkbox\">\r\n            <input type=\"checkbox\" />I agree to the{\" \"}\r\n            <a href=\"#\">terms and conditions</a>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <div class=\"control\">\r\n          <label class=\"radio\">\r\n            <input type=\"radio\" name=\"question\" />\r\n            Yes\r\n          </label>\r\n          <label class=\"radio\">\r\n            <input type=\"radio\" name=\"question\" />\r\n            No\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"field is-grouped\">\r\n        <div class=\"control\">\r\n          <button class=\"button is-link\">Submit</button>\r\n        </div>\r\n        <div class=\"control\">\r\n          <button class=\"button is-link is-light\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default Trace => {\r\n  return <div>Track and Trace</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default Home => {\r\n  return (\r\n    <div>\r\n      <h1>Welcome home</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./Navbar\";\nimport Order from \"./Order\";\nimport Trace from \"./Trace\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/order\">\n            <Order />\n          </Route>\n          <Route path=\"/trace\">\n            <Trace />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"*\">Not found</Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/css/bulma.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}