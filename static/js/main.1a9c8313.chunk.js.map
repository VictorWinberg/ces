{"version":3,"sources":["Navbar.js","ParcelShipping.js","ParcelReceipt.js","TracknTraceShow.js","TracknTraceFind.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","state","navbarActive","this","setState","className","role","aria-label","src","alt","style","maxHeight","width","height","overflow","aria-expanded","data-target","onClick","toggleActive","aria-hidden","id","to","Component","generateTrackingId","type","random","n","Math","floor","z","length","Array","join","ParcelShipping","from","weight","depth","heightUnit","widthUnit","depthUnit","isRecordedParcel","isWeapon","isLiveAnimal","isCautious","isRefrigerated","loading","initialLoading","result","cities","hasResult","hasNoResult","handleChange","bind","handleToggle","handleSubmit","fetch","then","res","json","map","name","sort","catch","err","console","log","price","currency","qs","parse","location","search","calcPrice","money","toUpperCase","round","target","value","event","JSON","stringify","method","headers","body","cheap","trackingId","fast","error","preventDefault","pathname","duration","onSubmit","required","onChange","city","key","step","min","max","placeholder","maxWidth","checked","htmlFor","disabled","renderNoResults","renderResults","ParcelReceipt","setTimeout","title","subtitle","classType","Object","keys","ref","el","printComponentRef","href","window","origin","Date","toLocaleString","renderOption","route","routes","trigger","content","TracknTraceShow","match","params","handleArrived","renderHandleArrived","date","getTime","status","unshift","handleLast","paddingTop","renderRoute","renderHandleLast","TracknTraceFind","some","incorrect","toLowerCase","includes","maxLength","renderNoResult","renderResult","App","basename","process","path","component","Boolean","hostname","rates","base","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a9c8313.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { navbarActive: false };\n  }\n\n  toggleActive() {\n    this.setState({ navbarActive: !this.state.navbarActive });\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <span className=\"navbar-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <figure className=\"image is-48x48\">\n                  <img\n                    src=\"/logo.png\"\n                    alt=\"Parcel Delivery IT Solution\"\n                    style={{ maxHeight: \"none\" }}\n                    width=\"64\"\n                    height=\"64\"\n                  />\n                </figure>\n              </div>\n              <div className=\"media-content\" style={{ overflow: \"hidden\" }}>\n                <p className=\"title is-5\">East India Trading</p>\n                <p className=\"subtitle is-7\">Parcel Delivery IT Solution</p>\n              </div>\n            </div>\n          </span>\n\n          <a\n            role=\"button\"\n            className={`navbar-burger burger ${\n              this.state.navbarActive ? \"is-active\" : \"\"\n            }`}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbar\"\n            onClick={() => this.toggleActive()}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div\n          id=\"navbar\"\n          className={`navbar-menu ${\n            this.state.navbarActive ? \"is-active\" : \"\"\n          }`}\n        >\n          <div className=\"navbar-start\">\n            <Link\n              to=\"/parcel-shipping\"\n              className=\"navbar-item is-tab\"\n              onClick={() => this.toggleActive()}\n            >\n              Parcel Shipping\n            </Link>\n            <Link\n              to=\"/track-n-trace\"\n              className=\"navbar-item is-tab\"\n              onClick={() => this.toggleActive()}\n            >\n              Track &amp; Trace\n            </Link>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"navbar-item has-dropdown is-hoverable\">\n                <a className=\"navbar-link\">Language</a>\n\n                <div className=\"navbar-dropdown\">\n                  <a\n                    className=\"navbar-item is-active\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    English\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"navbar-item\">\n              <div className=\"navbar-item has-dropdown is-hoverable\">\n                <a className=\"navbar-link\">Currency</a>\n\n                <div className=\"navbar-dropdown\">\n                  <Link\n                    to=\"?currency=usd\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    US Dollar\n                  </Link>\n                  <Link\n                    to=\"?currency=gbp\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    British Pund\n                  </Link>\n                  <Link\n                    to=\"?currency=eur\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    Euro\n                  </Link>\n                  <Link\n                    to=\"?currency=dkk\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    Danish Krone\n                  </Link>\n                  <Link\n                    to=\"?currency=sek\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    Swedish Krone\n                  </Link>\n                  <Link\n                    to=\"?currency=nok\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    Norwegian Krone\n                  </Link>\n                  <Link\n                    to=\"?currency=aed\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    Emirati Dirhams\n                  </Link>\n                  <Link\n                    to=\"?currency=aud\"\n                    className=\"navbar-item\"\n                    onClick={() => this.toggleActive()}\n                  >\n                    Australian Dollar\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport money from \"money\";\nimport qs from \"query-string\";\n\nconst generateTrackingId = type => {\n  function pad(n, width, z) {\n    z = z || \"0\";\n    n = n + \"\";\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n  }\n  const random = () => pad(Math.floor(Math.random() * 10000), 4);\n  return [random(), type, random()].join(\"-\");\n};\n\nclass ParcelShipping extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      from: \"\",\n      to: \"\",\n      weight: \"\",\n      height: \"\",\n      width: \"\",\n      depth: \"\",\n      heightUnit: \"cm\",\n      widthUnit: \"cm\",\n      depthUnit: \"cm\",\n      isRecordedParcel: false,\n      isWeapon: false,\n      isLiveAnimal: false,\n      isCautious: false,\n      isRefrigerated: false,\n      loading: false,\n      initialLoading: true,\n      result: {},\n      cities: [],\n      hasResult: false,\n      hasNoResult: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/api/cities\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          initialLoading: false,\n          cities: json.map(({ name }) => name).sort()\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  currency(price) {\n    const defaultCurrency = \"USD\";\n    if (!price) return null;\n    const { currency } = qs.parse(this.props.location.search);\n    if (!currency) return `${price} ${defaultCurrency}`;\n\n    const calcPrice = money(price)\n      .from(defaultCurrency)\n      .to(currency.toUpperCase());\n    return `${Math.round(calcPrice)} ${currency.toUpperCase()}`;\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n      hasResult: false,\n      hasNoResult: false,\n      result: {}\n    });\n  }\n\n  handleToggle({ target }) {\n    this.setState({\n      [target.name]: !this.state[target.name],\n      hasResult: false,\n      hasNoResult: false,\n      result: {}\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"ParcelShipping\", JSON.parse(JSON.stringify(this.state)));\n    this.setState({\n      loading: true,\n      hasResult: false,\n      hasNoResult: false,\n      result: {}\n    });\n\n    fetch(\"/api/routes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(res => res.json())\n      .then(json => {\n        const result = {\n          cheap: {\n            ...json.cheap,\n            trackingId: generateTrackingId(\"CHEAP\")\n          },\n          fast: {\n            ...json.fast,\n            trackingId: generateTrackingId(\"FAST\")\n          }\n        };\n        if (json.fast.price) {\n          this.setState({ loading: false, hasResult: true, result });\n        } else {\n          this.setState({ loading: false, hasNoResult: true });\n        }\n      })\n      .catch(err => console.error(err));\n    event.preventDefault();\n  }\n\n  renderNoResults() {\n    return (\n      <div className=\"field is-horizontal\">\n        <div className=\"field-label\"></div>\n        <div className=\"field-body\">\n          <div className=\"container columns is-fullwidth\">\n            <div className=\"column fadeInRightBig faster\">\n              <h4 className=\"is-size-4\">\n                No possible parcel route with given information found\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderResults({ cheap, fast }) {\n    return (\n      <div className=\"field is-horizontal\">\n        <div className=\"field-label\"></div>\n        <div className=\"field-body\">\n          <div className=\"container columns is-fullwidth\">\n            <div className=\"column is-half animated fadeInRightBig faster\">\n              <Link\n                to={{\n                  pathname: \"/parcel-receipt\",\n                  state: { ...this.state, ...fast }\n                }}\n              >\n                <div className=\"card\">\n                  <header className=\"card-header\">\n                    <p className=\"card-header-title\">Fastest</p>\n                  </header>\n                  <div className=\"card-content\">\n                    <div className=\"content\">\n                      Delivery time: {fast.duration} hours\n                      <br />\n                      Price: {this.currency(fast.price)}\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"column is-half animated fadeInRightBig faster delay-150ms\">\n              <Link\n                to={{\n                  pathname: \"/parcel-receipt\",\n                  state: { ...this.state, ...cheap }\n                }}\n              >\n                <div className=\"card\">\n                  <header className=\"card-header\">\n                    <p className=\"card-header-title\">Cheapest</p>\n                  </header>\n                  <div className=\"card-content\">\n                    <div className=\"content\">\n                      Delivery time: {cheap.duration} hours\n                      <br />\n                      Price: {this.currency(cheap.price)}\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"hero-body\">\n        <form className=\"container\" onSubmit={this.handleSubmit}>\n          <h1 className=\"title is-1\">Parcel Shipping</h1>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">From</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div\n                  className={`select is-fullwidth ${\n                    this.state.initialLoading ? \"is-loading\" : \"\"\n                  }`}\n                >\n                  <select\n                    name=\"from\"\n                    required\n                    value={this.state.from}\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"\">Select city</option>\n                    {this.state.cities.map(city => (\n                      <option key={city}>{city}</option>\n                    ))}\n                    <option>WESTPORT</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"field-label is-normal\">\n                <label className=\"label\">To</label>\n              </div>\n              <div className=\"field-body\">\n                <div\n                  className={`select is-fullwidth ${\n                    this.state.initialLoading ? \"is-loading\" : \"\"\n                  }`}\n                >\n                  <select\n                    name=\"to\"\n                    required\n                    value={this.state.to}\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"\">Select city</option>\n                    {this.state.cities.map(city => (\n                      <option key={city}>{city}</option>\n                    ))}\n                    <option>WESTPORT</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Weight</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field is-grouped\">\n                <p className=\"control is-expanded\">\n                  <input\n                    id=\"slider\"\n                    name=\"weight\"\n                    className=\"slider is-fullwidth\"\n                    step=\"1\"\n                    min=\"0\"\n                    max=\"100\"\n                    type=\"range\"\n                    value={this.state.weight}\n                    onChange={this.handleChange}\n                  />\n                </p>\n                <p className=\"control\">\n                  <input\n                    name=\"weight\"\n                    required\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"1000000\"\n                    className=\"button is-dark\"\n                    placeholder=\"N/A\"\n                    style={{ maxWidth: \"5rem\" }}\n                    value={this.state.weight}\n                    onChange={this.handleChange}\n                  />\n                </p>\n                <p className=\"control\">\n                  <span className=\"button is-white\">kg</span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Size</label>\n            </div>\n\n            <div className=\"field-body\">\n              <div className=\"field has-addons\">\n                <p className=\"control is-expanded\">\n                  <input\n                    name=\"height\"\n                    required\n                    className=\"input\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"1000000\"\n                    placeholder=\"Height\"\n                    value={this.state.height}\n                    onChange={this.handleChange}\n                  />\n                </p>\n                <p className=\"control\">\n                  <span className=\"select\">\n                    <select\n                      name=\"heightUnit\"\n                      value={this.state.heightUnit}\n                      onChange={this.handleChange}\n                    >\n                      <option>mm</option>\n                      <option>cm</option>\n                      <option>m</option>\n                    </select>\n                  </span>\n                </p>\n              </div>\n              <div className=\"field has-addons\">\n                <p className=\"control is-expanded\">\n                  <input\n                    name=\"width\"\n                    required\n                    className=\"input\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"1000000\"\n                    placeholder=\"Width\"\n                    value={this.state.width}\n                    onChange={this.handleChange}\n                  />\n                </p>\n                <p className=\"control\">\n                  <span className=\"select\">\n                    <select\n                      name=\"widthUnit\"\n                      value={this.state.widthUnit}\n                      onChange={this.handleChange}\n                    >\n                      <option>mm</option>\n                      <option>cm</option>\n                      <option>m</option>\n                    </select>\n                  </span>\n                </p>\n              </div>\n              <div className=\"field has-addons\">\n                <p className=\"control is-expanded\">\n                  <input\n                    name=\"depth\"\n                    required\n                    className=\"input\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"1000000\"\n                    placeholder=\"Depth\"\n                    value={this.state.depth}\n                    onChange={this.handleChange}\n                  />\n                </p>\n                <p className=\"control\">\n                  <span className=\"select\">\n                    <select\n                      name=\"depthUnit\"\n                      value={this.state.depthUnit}\n                      onChange={this.handleChange}\n                    >\n                      <option>mm</option>\n                      <option>cm</option>\n                      <option>m</option>\n                    </select>\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label\">\n              <label className=\"label\">Options</label>\n            </div>\n\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <p className=\"control b-checkbox\">\n                  <input\n                    className=\"is-checkradio\"\n                    id=\"isRecordedParcel\"\n                    type=\"checkbox\"\n                    name=\"isRecordedParcel\"\n                    checked={this.state.isRecordedParcel}\n                    onChange={this.handleToggle}\n                  />\n                  <label htmlFor=\"isRecordedParcel\">Recorded</label>\n                </p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control b-checkbox\">\n                  <input\n                    className=\"is-checkradio\"\n                    id=\"isWeapon\"\n                    type=\"checkbox\"\n                    name=\"isWeapon\"\n                    checked={this.state.isWeapon}\n                    onChange={this.handleToggle}\n                  />\n                  <label htmlFor=\"isWeapon\">Weapon</label>\n                </p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control b-checkbox\">\n                  <input\n                    className=\"is-checkradio\"\n                    id=\"isLiveAnimal\"\n                    type=\"checkbox\"\n                    name=\"isLiveAnimal\"\n                    checked={this.state.isLiveAnimal}\n                    onChange={this.handleToggle}\n                  />\n                  <label htmlFor=\"isLiveAnimal\">Live Animal</label>\n                </p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control b-checkbox\">\n                  <input\n                    className=\"is-checkradio\"\n                    id=\"isCautious\"\n                    type=\"checkbox\"\n                    name=\"isCautious\"\n                    checked={this.state.isCautious}\n                    onChange={this.handleToggle}\n                  />\n                  <label htmlFor=\"isCautious\">Cautious</label>\n                </p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control b-checkbox\">\n                  <input\n                    className=\"is-checkradio\"\n                    id=\"isRefrigerated\"\n                    type=\"checkbox\"\n                    name=\"isRefrigerated\"\n                    checked={this.state.isRefrigerated}\n                    onChange={this.handleToggle}\n                  />\n                  <label htmlFor=\"isRefrigerated\">Refrigerated</label>\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped is-grouped-right\">\n            <p className=\"control\">\n              <button\n                className={`button is-primary ${\n                  this.state.loading ? \"is-loading\" : \"\"\n                } `}\n                disabled={this.state.hasResult || this.state.hasNoResult}\n                type=\"submit\"\n              >\n                Find\n              </button>\n            </p>\n          </div>\n          {this.state.hasNoResult && this.renderNoResults()}\n          {this.state.hasResult && this.renderResults(this.state.result)}\n        </form>\n      </div>\n    );\n  }\n}\nexport default ParcelShipping;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport QRCode from \"qrcode.react\";\nimport ReactToPrint from \"react-to-print\";\nimport money from \"money\";\nimport qs from \"query-string\";\n\nclass ParcelReceipt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = props.location.state || {};\n    this.state.initialLoading = true;\n\n    this.currency = this.currency.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ initialLoading: false });\n    }, 500);\n  }\n\n  renderOption({ title, subtitle, classType }) {\n    return (\n      <div className=\"tile is-parent\">\n        <article className={`tile is-child notification ${classType}`}>\n          <p className=\"title\">{title}</p>\n          <p className=\"subtitle\">{subtitle}</p>\n        </article>\n      </div>\n    );\n  }\n\n  currency() {\n    const defaultCurrency = \"USD\";\n    if (!this.state.price) return null;\n    const { currency } = qs.parse(this.props.location.search);\n    if (!currency) return `${this.state.price} ${defaultCurrency}`;\n\n    const price = money(this.state.price)\n      .from(defaultCurrency)\n      .to(currency.toUpperCase());\n    return `${Math.round(price)} ${currency.toUpperCase()}`;\n  }\n\n  render() {\n    if (Object.keys(this.state).length === 0) {\n      return <Redirect to=\"/parcel-shipping\" />;\n    }\n\n    if (this.state.initialLoading) {\n      return (\n        <div className=\"hero-body\" ref={el => (this.printComponentRef = el)}>\n          <div className=\"container\">\n            <h1 className=\"title is-size-1-tablet is-size-3-mobile has-text-centered-mobile\">\n              Parcel Receipt\n            </h1>\n            <h4 className=\"is-size-4\">Generating...</h4>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"hero-body\" ref={el => (this.printComponentRef = el)}>\n        <style>{`@media print {.is-hidden-print {display: none !important;}}`}</style>\n        <div className=\"container\">\n          <h1 className=\"title is-size-1-tablet is-size-3-mobile has-text-centered-mobile\">\n            Parcel Receipt\n          </h1>\n\n          <h4 className=\"is-size-4\">Parcel</h4>\n          <div className=\"columns has-text-centered is-multiline is-mobile\">\n            <div className=\"column is-one-quarter-desktop is-full-tablet is-full-mobile\">\n              Tracking Id <br />\n              <span className=\"is-size-3\">{this.state.trackingId}</span>\n            </div>\n            <div className=\"column is-half-desktop is-full-tablet is-full-mobile\">\n              Size <br />\n              <span className=\"is-size-3\">\n                {`${this.state.height} ${this.state.heightUnit} x ${this.state.width} ${this.state.widthUnit} x ${this.state.depth} ${this.state.depthUnit}`}\n              </span>\n            </div>\n            <div className=\"column is-one-quarter-desktop is-full-tablet is-full-mobile\">\n              Weight <br />\n              <span className=\"is-size-3\">{this.state.weight} kg</span>\n            </div>\n          </div>\n\n          <h4 className=\"is-size-4\">Delivery</h4>\n          <div className=\"columns has-text-centered is-multiline is-mobile\">\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\n              From <br />\n              <span className=\"is-size-3\">{this.state.from}</span>\n            </div>\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile\">\n              To <br />\n              <span className=\"is-size-3\">{this.state.to}</span>\n            </div>\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile is-hidden-print\">\n              Time <br />\n              <span className=\"is-size-3\">{this.state.duration} hours</span>\n            </div>\n            <div className=\"column is-one-quarter-desktop is-half-tablet is-full-mobile is-hidden-print\">\n              Price\n              <div className=\"navbar-item has-dropdown is-hoverable is-inline-block is-hidden-tablet-only is-hidden-mobile\">\n                <a className=\"navbar-link\">&nbsp;</a>\n\n                <div className=\"navbar-dropdown\">\n                  <Link to=\"?currency=usd\" className=\"navbar-item\">\n                    US Dollar\n                  </Link>\n                  <Link to=\"?currency=gbp\" className=\"navbar-item\">\n                    British Pund\n                  </Link>\n                  <Link to=\"?currency=eur\" className=\"navbar-item\">\n                    Euro\n                  </Link>\n                  <Link to=\"?currency=dkk\" className=\"navbar-item\">\n                    Danish Krone\n                  </Link>\n                  <Link to=\"?currency=sek\" className=\"navbar-item\">\n                    Swedish Krone\n                  </Link>\n                  <Link to=\"?currency=nok\" className=\"navbar-item\">\n                    Norwegian Krone\n                  </Link>\n                  <Link to=\"?currency=aed\" className=\"navbar-item\">\n                    Emirati Dirhams\n                  </Link>\n                  <Link to=\"?currency=aud\" className=\"navbar-item\">\n                    Australian Dollar\n                  </Link>\n                </div>\n              </div>\n              <br />\n              <span className=\"is-size-3\">{this.currency()}</span>\n            </div>\n          </div>\n\n          <div className=\"has-text-centered\">\n            <a\n              href={`${window.location.origin}/track-n-trace/${this.state.trackingId}`}\n            >\n              <QRCode\n                value={`${window.location.origin}/track-n-trace/${this.state.trackingId}`}\n              />\n            </a>\n            <br />\n            <em>Date {new Date().toLocaleString()}</em>\n          </div>\n\n          {(this.state.isRecordedParcel ||\n            this.state.isWeapon ||\n            this.state.isLiveAnimal ||\n            this.state.isCautious ||\n            this.state.isRefrigerated) && <h4 className=\"is-size-4\">Labels</h4>}\n          <div className=\"tile is-ancestor\">\n            {this.state.isRecordedParcel &&\n              this.renderOption({\n                title: \"RECORDED PARCEL\",\n                subtitle: \"This parcel should be recorded at destination.\",\n                classType: \"is-primary\"\n              })}\n            {this.state.isWeapon &&\n              this.renderOption({\n                title: \"WEAPON\",\n                subtitle: \"This parcel contains weapon(s).\",\n                classType: \"is-danger\"\n              })}\n            {this.state.isLiveAnimal &&\n              this.renderOption({\n                title: \"LIVE ANIMAL\",\n                subtitle: \"This parcel contains live animal(s).\",\n                classType: \"is-danger\"\n              })}\n            {this.state.isCautious &&\n              this.renderOption({\n                title: \"CAUTIOUS\",\n                subtitle: \"This is a cautious parcel.\",\n                classType: \"is-warning\"\n              })}\n            {this.state.isRefrigerated &&\n              this.renderOption({\n                title: \"REFRIGERATED\",\n                subtitle: \"Keep parcel refrigerated.\",\n                classType: \"is-info\"\n              })}\n          </div>\n\n          <h4 className=\"is-size-4 is-hidden-print\">Planned Route</h4>\n          <table className=\"table is-size-4 is-size-6-mobile is-hidden-print is-fullwidth\">\n            <tbody>\n              {this.state.route.map((from, id, routes) => {\n                const to = routes[id + 1];\n                if (routes.length - 1 === id) return null;\n\n                return (\n                  <tr key={id}>\n                    <td className=\"has-text-weight-light\">BOAT </td>\n                    <td>{from}</td>\n                    <td className=\"has-text-weight-light is-hidden-mobile\">\n                      ->\n                    </td>\n                    <td>{to}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n\n          <div className=\"field is-grouped is-grouped-right is-hidden-print\">\n            <p className=\"control\">\n              <ReactToPrint\n                trigger={() => (\n                  <button className=\"button is-primary\" type=\"submit\">\n                    Print\n                  </button>\n                )}\n                content={() => this.printComponentRef}\n              />\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ParcelReceipt;\n","import React, { Component } from \"react\";\nimport QRCode from \"qrcode.react\";\n\nclass TracknTraceShow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.match.params.id,\n      city: \"\",\n      cities: [],\n      routes: [],\n      initialLoading: true\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleArrived = this.handleArrived.bind(this);\n    this.renderHandleArrived = this.renderHandleArrived.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/api/cities\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          initialLoading: false,\n          cities: json.map(({ name }) => name).sort()\n        });\n      })\n      .catch(err => console.log(err));\n    setTimeout(() => {\n      this.setState({\n        routes: [\n          {\n            city: \"WADAI\",\n            date: new Date(new Date().getTime() - 300006969).toLocaleString(),\n            status: \"Arrived\"\n          },\n          {\n            city: \"TIMBUKTU\",\n            date: new Date(new Date().getTime() - 600004242).toLocaleString(),\n            status: \"Sent\"\n          },\n          {\n            city: \"KAPSTADEN\",\n            date: new Date(new Date().getTime() - 200001337).toLocaleString(),\n            status: \"Sent\"\n          }\n        ]\n      });\n    }, 500);\n  }\n\n  handleChange({ target }) {\n    this.setState({ [target.name]: target.value });\n  }\n\n  handleArrived(event) {\n    console.log(\"TracknTraceArrived\", JSON.parse(JSON.stringify(this.state)));\n    this.setState({ loading: true });\n    setTimeout(() => {\n      const routes = JSON.parse(JSON.stringify(this.state.routes));\n      routes.unshift({\n        city: this.state.city,\n        date: new Date().toLocaleString(),\n        status: \"Arrived\"\n      });\n      this.setState({ loading: false, routes });\n    }, 500);\n    event.preventDefault();\n  }\n\n  handleLast(status) {\n    console.log(\"TracknTrace\" + status, JSON.parse(JSON.stringify(this.state)));\n    const routes = JSON.parse(JSON.stringify(this.state.routes));\n    routes[0].status = status;\n\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ loading: false, city: \"\", routes });\n    }, 500);\n  }\n\n  renderRoute({ city, date, status }) {\n    return (\n      <tr key={date}>\n        <td>{city}</td>\n        <td className=\"has-text-weight-light\">\n          <em>{date}</em>\n        </td>\n        <td className=\"has-text-weight-light\">{status}</td>\n      </tr>\n    );\n  }\n\n  renderHandleArrived() {\n    return (\n      <form onSubmit={this.handleArrived}>\n        <div className=\"field is-horizontal\">\n          <div className=\"field has-addons\">\n            <p className=\"control is-expanded is-size-4\">\n              <span className=\"select is-fullwidth\">\n                <select\n                  name=\"city\"\n                  required\n                  value={this.state.city}\n                  onChange={this.handleChange}\n                >\n                  <option value=\"\">Select city</option>\n                  {this.state.cities.map(city => (\n                    <option key={city}>{city}</option>\n                  ))}\n                </select>\n              </span>\n            </p>\n            <p className=\"control\">\n              <button\n                className={`button is-info is-size-4 ${\n                  this.state.loading ? \"is-loading\" : \"\"\n                }`}\n                type=\"submit\"\n              >\n                Arrived\n              </button>\n            </p>\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  renderHandleLast(status) {\n    return (\n      <button\n        className={`button is-size-4 is-info ${\n          this.state.loading ? \"is-loading\" : \"\"\n        }`}\n        onClick={() => this.handleLast(status)}\n      >\n        {status}\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title is-size-1-tablet is-size-3-mobile has-text-centered-mobile\">\n            Track &amp; Trace\n          </h1>\n\n          <h4 className=\"is-size-4\">Parcel</h4>\n          <div className=\"columns is-multiline is-mobile\">\n            <div className=\"column is-half-tablet is-full-mobile\">\n              <div className=\"card has-text-centered\">\n                <div className=\"card-image\" style={{ paddingTop: \"2rem\" }}>\n                  <a\n                    href={`${window.location.origin}/track-n-trace/${this.state.id}`}\n                  >\n                    <QRCode\n                      value={`${window.location.origin}/track-n-trace/${this.state.id}`}\n                    />\n                  </a>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"title is-4\">{this.state.id}</p>\n                  <p className=\"subtitle is-6\">Tracking Id</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <h4 className=\"is-size-4\">Delivery Route</h4>\n          <table className=\"table is-size-4 is-size-6-mobile is-fullwidth\">\n            <tbody>{this.state.routes.map(this.renderRoute)}</tbody>\n          </table>\n\n          {true &&\n            this.state.routes.length > 0 &&\n            this.state.routes[0].status !== \"Distributed\" && (\n              <h4 className=\"is-size-4\">Update Delivery</h4>\n            )}\n          {true &&\n            this.state.routes.length > 0 &&\n            this.state.routes[0].status === \"Sent\" &&\n            this.renderHandleArrived()}\n          {true &&\n            this.state.routes.length > 0 &&\n            this.state.routes.length < 5 &&\n            this.state.routes[0].status === \"Arrived\" &&\n            this.renderHandleLast(\"Sent\")}\n          {true &&\n            this.state.routes.length === 5 &&\n            this.state.routes[0].status !== \"Distributed\" &&\n            this.renderHandleLast(\"Distributed\")}\n        </div>\n      </div>\n    );\n  }\n}\nexport default TracknTraceShow;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport QRCode from \"qrcode.react\";\n\nclass TracknTraceFind extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      loading: false,\n      hasResult: false,\n      hasNoResult: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value.toUpperCase(),\n      hasResult: false,\n      hasNoResult: false\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"TracknTraceFind\", JSON.parse(JSON.stringify(this.state)));\n    this.setState({ loading: true, hasResult: false, hasNoResult: false });\n    setTimeout(() => {\n      const notPossible = [\"error\", \"42\", \"trump\", \"jan\", \"zubac\", \"walk\"];\n      if (\n        notPossible.some(incorrect =>\n          this.state.id.toLowerCase().includes(incorrect)\n        )\n      ) {\n        this.setState({ loading: false, hasNoResult: true });\n      } else {\n        this.setState({ loading: false, hasResult: true });\n      }\n    }, 500);\n    event.preventDefault();\n  }\n\n  renderNoResult() {\n    return (\n      <div className=\"field is-horizontal animated bounceInRight\">\n        <div className=\"field-label\"></div>\n        <div className=\"field-body\">\n          <div className=\"container columns is-fullwidth\">\n            <div className=\"column\">\n              <h4 className=\"is-size-4\">\n                No parcel with given <strong>Tracking Id</strong> found\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderResult() {\n    return (\n      <div className=\"field is-horizontal animated bounceInRight\">\n        <div className=\"field-label\"></div>\n        <div className=\"field-body\">\n          <div className=\"container columns is-fullwidth\">\n            <div className=\"column is-half\">\n              <h4 className=\"is-size-4\">Parcel found</h4>\n              <Link\n                to={{\n                  pathname: `/track-n-trace/${this.state.id}`\n                }}\n              >\n                <div className=\"card has-text-centered\">\n                  <div className=\"card-content\">\n                    <div className=\"card-image\" style={{ paddingTop: \"2rem\" }}>\n                      <QRCode\n                        value={`${window.location.origin}/track-n-trace/${this.state.id}`}\n                      />\n                    </div>\n                    <div className=\"card-content\">\n                      <p className=\"title is-4\">{this.state.id}</p>\n                      <p className=\"subtitle is-6\">Tracking Id</p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"hero-body\">\n        <form className=\"container\" onSubmit={this.handleSubmit}>\n          <h1 className=\"title is-1\">Track &amp; Trace</h1>\n\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Tracking Id</label>\n            </div>\n\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <p className=\"control\">\n                  <input\n                    name=\"id\"\n                    required\n                    className=\"input\"\n                    type=\"text\"\n                    maxLength=\"32\"\n                    placeholder=\"E.g. 9572-FAST-1742\"\n                    value={this.state.id}\n                    onChange={this.handleChange}\n                  />\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped is-grouped-right\">\n            <p className=\"control\">\n              <button\n                className={`button is-primary ${\n                  this.state.loading ? \"is-loading\" : \"\"\n                }`}\n                type=\"submit\"\n              >\n                Find\n              </button>\n            </p>\n          </div>\n\n          {this.state.hasNoResult && this.renderNoResult()}\n          {this.state.hasResult && this.renderResult()}\n        </form>\n      </div>\n    );\n  }\n}\nexport default TracknTraceFind;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Navbar from \"./Navbar\";\nimport ParcelShipping from \"./ParcelShipping\";\nimport ParcelReceipt from \"./ParcelReceipt\";\nimport TracknTraceShow from \"./TracknTraceShow\";\nimport TracknTraceFind from \"./TracknTraceFind\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar />\n      <Switch>\n        <Route path=\"/parcel-shipping\" component={ParcelShipping} />\n        <Route path=\"/parcel-receipt\" component={ParcelReceipt} />\n        <Route path=\"/track-n-trace/:id\" component={TracknTraceShow} />\n        <Route path=\"/track-n-trace\" component={TracknTraceFind} />\n        <Route path=\"*\">\n          <Redirect to=\"/parcel-shipping\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport money from \"money\";\nimport \"bulma/css/bulma.min.css\";\nimport \"bulma-slider/dist/css/bulma-slider.min.css\";\nimport \"bulma-checkradio/dist/css/bulma-checkradio.min.css\";\nimport \"animate.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nfetch(\n  \"https://openexchangerates.org/api/latest.json?app_id=df63dd77817542ee95449bb3f0517029\"\n)\n  .then(res => res.json())\n  .then(json => {\n    if (json.error) throw json.error;\n\n    money.rates = json.rates;\n    money.base = json.base;\n    ReactDOM.render(<App />, document.getElementById(\"root\"));\n  })\n  .catch(err => ReactDOM.render(<App />, document.getElementById(\"root\")));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}